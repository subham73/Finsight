"""create tables

Revision ID: 03e55ae78ea8
Revises: 
Create Date: 2025-07-03 08:42:48.207885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '03e55ae78ea8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clusters',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('region', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('exchange_rates',
    sa.Column('currency_code', sa.String(length=10), nullable=False),
    sa.Column('rate_to_usd', sa.Numeric(precision=10, scale=12), nullable=False),
    sa.Column('last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('currency_code')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('cluster_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['clusters.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.Text(), nullable=False),
    sa.Column('entity', sa.Text(), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('table_name', sa.Text(), nullable=False),
    sa.Column('record_id', sa.UUID(), nullable=True),
    sa.Column('field_changed', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by', sa.UUID(), nullable=True),
    sa.Column('changed_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_country', sa.Text(), nullable=False),
    sa.Column('project_number', sa.Text(), nullable=True),
    sa.Column('op_ids', sa.Text(), nullable=True),
    sa.Column('project_name', sa.Text(), nullable=False),
    sa.Column('region', sa.Text(), nullable=False),
    sa.Column('cluster_id', sa.UUID(), nullable=True),
    sa.Column('manager_id', sa.UUID(), nullable=True),
    sa.Column('customer_name', sa.Text(), nullable=True),
    sa.Column('customer_group', sa.Text(), nullable=True),
    sa.Column('vertical', sa.Text(), nullable=True),
    sa.Column('project_type', sa.Text(), nullable=True),
    sa.Column('project_group', sa.Text(), nullable=True),
    sa.Column('execution_country', sa.Text(), nullable=True),
    sa.Column('currency', sa.Text(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['clusters.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_invitations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invited_email', sa.Text(), nullable=False),
    sa.Column('invited_role', sa.Text(), nullable=False),
    sa.Column('cluster_id', sa.UUID(), nullable=True),
    sa.Column('invited_by', sa.UUID(), nullable=True),
    sa.Column('status', sa.Text(), server_default='pending', nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('accepted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['cluster_id'], ['clusters.id'], ),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forecast_values',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('forecast_type', sa.String(), nullable=False),
    sa.Column('source_country', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=3), nullable=False),
    sa.Column('forecast_usd', sa.Numeric(precision=12, scale=3), nullable=False),
    sa.Column('actuals', sa.Numeric(precision=12, scale=3), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('forecast_values')
    op.drop_table('user_invitations')
    op.drop_table('projects')
    op.drop_table('audit_logs')
    op.drop_table('activity_logs')
    op.drop_table('users')
    op.drop_table('exchange_rates')
    op.drop_table('clusters')
    # ### end Alembic commands ###
